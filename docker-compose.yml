services:
  postgres:
    image: postgres:16-alpine
    container_name: blockchain-monitor-db
    environment:
      POSTGRES_DB: blockchain_monitoring_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8'
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U dev_user -d blockchain_monitoring_dev']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  postgres-test:
    image: postgres:16-alpine
    container_name: blockchain-monitor-test-db
    environment:
      POSTGRES_DB: blockchain_monitoring_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8'
    ports:
      - '5433:5432'
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test:
        ['CMD-SHELL', 'pg_isready -U test_user -d blockchain_monitoring_test']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    profiles:
      - test

  redis:
    image: redis:7-alpine
    container_name: blockchain-monitor-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
  postgres_test_data:
  redis_data:
